# GraphQL schema
#
# https://gqlgen.com/getting-started/

enum NodeAccess {
  public
  restricted
  private
}

enum PostType {
  text
  media
  link
}

type User {
  id: ID!
  name: String!
  bases: Int!
}

input NewUser {
  name: String
}

type Post {
  id: ID!
  title: String!
  link: String
  deltaOps: String
  nodeName: String!
  slug: String!
  creationTimestamp: Int!
  authorId: String!
  author: User
}

input NewPost {
  type: PostType!
  title: String!
  link: String
  deltaOps: String
  nodeName: String!
}

type Node {
  name: ID!
  tags: [String]
  access: NodeAccess!
  nsfw: Boolean!
  description: String
  creationTimestamp: Int!
  creatorId: ID!
}

input NewNode {
  name: String!
  tags: [String]
  access: NodeAccess!
  nsfw: Boolean!
  description: String
}

type Comment {
  id: ID!
  postId: String!
  postSlug: String!
  creationTimestamp: Int!
  deltaOps: String!
  authorId: String!
  author: User!
}

input NewComment {
  postId: String!
  postSlug: String!
  deltaOps: String!
  authorId: String!
}

type Query {
  node(name: ID!): Node
  nodes(substring: String): [Node!]!
  post(id: ID!, slug: String!): Post
  posts(nodeName: String): [Post]!
  user(id: ID): User
  users(nameSubstring: String!): [User]!
  comment(id: ID!): Comment
  comments(postId: ID!, postSlug: String!): [Comment]!
}

type Mutation {
  createPost(newPost: NewPost!): Post
  createNode(newNode: NewNode!): Node
  createUser(newUser: NewUser!): User
  createComment(newComment: NewComment!): Comment
}
